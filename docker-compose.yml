version: "3.8"
services:
  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend
    container_name: medusa-server
    image: backend:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app/medusa
      - backend_node_modules:/app/medusa/node_modules
    ports:
      - "9000:9000"
      - "7001:7001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-docker?sslmode=disable
      REDIS_URL: redis://cache
    
  postgres:
    image: postgres:10.4-alpine
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-docker
    
  redis:
    image: redis:7.0.7-alpine
    restart: always
    container_name: cache
    expose:
      - 6379
    volumes:
      - redis_data:/data
    
  storefront:
    build:
      context: ./storefront
      dockerfile: Dockerfile
    container_name: medusa-storefront
    image: storefront:latest
    restart: always
    depends_on:
      - backend
    volumes:
      - ./storefront:/app/storefront
      - storefront_node_modules:/app/storefront/node_modules
    ports:
      - "8000:8000"
    environment:
      NEXT_PUBLIC_MEDUSA_BACKEND_URL: http://backend:9000
      BASE_URL: http://localhost:8000
      NEXT_PUBLIC_BASE_URL: http://localhost:8000

volumes:
  admin_node_modules:
  storefront_node_modules:
  backend_node_modules:
  postgres_data:
  redis_data:
